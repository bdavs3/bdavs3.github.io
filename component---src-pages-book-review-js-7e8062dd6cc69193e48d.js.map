{"version":3,"sources":["webpack:///./src/components/book-review/modal.js","webpack:///./src/components/book-review/tag.js","webpack:///./src/components/book-review/book-review-entry.js","webpack:///./src/components/book-review/dropdown.js","webpack:///./src/pages/book-review.js","webpack:///./src/components/head.js"],"names":["Modal","props","author","content","coverImage","title","isOpen","closeModal","react_default","a","createElement","className","onClick","aria-label","fluid_image","fileName","dangerouslySetInnerHTML","__html","Tag","label","isFictNonFict","AOS","init","BookReviewEntry","_this","_React$Component","call","this","_closeDetails","setState","detailsOpen","_openDetails","state","render","_this$props","excerpt","tags","book_review_modal","data-aos","map","tag","book_review_tag","React","Component","Dropdown","options","active","type","toggleDropdown","itemClick","aria-haspopup","aria-controls","id","role","Array","from","value","key","BookReview","_searchKeyPress","evt","searchButton","click","genreFilters","_updateSearchText","searchText","target","_fuzzySearch","books","fuse","Fuse","results","search","fuzzySearchResults","_openModal","infoOpen","_closeModal","_toggleDropdown","dropdownName","openDropdown","_dropdownItemClick","item","actionType","_closeDropdowns","includes","concat","sortOrder","_clearFilters","_clearSearch","refs","txtSearch","_this2","data","genreOptions","fuzzySearchOptions","threshold","keys","layout","head","allMarkdownRemark","edges","filter","_ref","node","frontmatter","_ref2","html","join","ref","placeholder","onChange","onKeyPress","input","_ref3","_ref4","genre","book_review_dropdown","Set","_ref5","flatMap","_ref6","forEach","push","_ref7","_ref8","some","element","length","sort","b","date","_ref9","book_review_book_review_entry","__webpack_exports__","gatsby_browser_entry","query","book_review_BookReview","Object","assign","_725852042","Head","_public_static_d_1019946411_json__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","site","siteMetadata"],"mappings":"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","file":"component---src-pages-book-review-js-7e8062dd6cc69193e48d.js","sourcesContent":["import React from \"react\";\n\nimport FluidImage from \"../utilities/fluid-image\";\n\nimport \"./styles/modal.scss\";\n\nconst Modal = props => {\n  const { author, content, coverImage, title, isOpen, closeModal } = props;\n  return (\n    <div className=\"modal-wrapper\">\n      <div className={`modal ${isOpen ? \"is-active\" : \"\"}`}>\n        <div className=\"modal-background\" onClick={closeModal}></div>\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div className=\"modal-card-title\">\n              <b>{title}</b>\n              <br />\n              {` by ${author}`}\n            </div>\n            <button\n              className=\"delete\"\n              onClick={closeModal}\n              aria-label=\"close\"\n            ></button>\n          </header>\n          <section className=\"modal-card-body\">\n            <div className=\"cover-image-wrapper\">\n              <FluidImage fileName={coverImage} />\n            </div>\n            <div dangerouslySetInnerHTML={{ __html: content }} />\n          </section>\n          <footer className=\"modal-card-foot\">\n            <button className=\"button\" onClick={closeModal}>\n              Exit\n            </button>\n          </footer>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n// export default props => (\n//   <StaticQuery\n//     query={graphql`\n//       query {\n//         rating_star: file(relativePath: { eq: \"rating-star.png\" }) {\n//           childImageSharp {\n//             fixed(width: 18, height: 18) {\n//               ...GatsbyImageSharpFixed\n//             }\n//           }\n//         }\n//       }\n//     `}\n//     render={data => <Modal data={data} {...props} />}\n//   />\n// );\n","import React from \"react\";\n\nimport \"./styles/tag.scss\";\n\nconst Tag = props => {\n  const { label } = props;\n  const isFictNonFict = label === \"Fiction\" || label === \"Non-fiction\";\n  return (\n    <div className=\"tag-wrapper\">\n      <button\n        className={`button ${isFictNonFict ? \"fiction_non-fiction\" : \"\"}`}\n      >\n        {label}\n      </button>\n    </div>\n  );\n};\n\nexport default Tag;\n","import React from \"react\";\nimport AOS from \"aos\";\n\nimport FluidImage from \"../utilities/fluid-image\";\nimport Modal from \"./modal\";\nimport Tag from \"./tag\";\n\nimport \"./styles/book-review-entry.scss\";\n\nAOS.init();\n\nclass BookReviewEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      detailsOpen: false,\n    };\n  }\n\n  render() {\n    const { author, content, coverImage, excerpt, title, tags } = this.props;\n\n    return (\n      <div className=\"book-review-entry-wrapper\">\n        <Modal\n          author={author}\n          content={content}\n          coverImage={coverImage}\n          title={title}\n          isOpen={this.state.detailsOpen}\n          closeModal={this._closeDetails}\n        />\n        <div className=\"box\" onClick={this._openDetails} data-aos=\"fade-up\">\n          <article className=\"media\">\n            <div className=\"media-content\">\n              <div className=\"columns\">\n                <div className=\"column is-2\">\n                  <FluidImage fileName={coverImage} className=\"book-cover\" />\n                </div>\n                <div className=\"column is-10\">\n                  <strong>{title}</strong>\n                  <br />\n                  <small>{author}</small>\n                  <br />\n                  {excerpt}\n                  <strong className=\"read-more\" onClick={this._openDetails}>\n                    {\" Read more\"}\n                  </strong>\n                  <section className=\"section tag-section\">\n                    {tags.map(tag => (\n                      <Tag label={tag} />\n                    ))}\n                  </section>\n                </div>\n              </div>\n            </div>\n          </article>\n        </div>\n      </div>\n    );\n  }\n\n  _closeDetails = () => {\n    this.setState({\n      detailsOpen: false,\n    });\n  };\n\n  _openDetails = () => {\n    this.setState({\n      detailsOpen: true,\n    });\n  };\n}\n\nexport default BookReviewEntry;\n","import React from \"react\";\n\nimport \"./styles/dropdown.scss\";\n\nconst Dropdown = props => {\n  const { title, options, active, type, toggleDropdown, itemClick } = props;\n\n  return (\n    <div className=\"dropdown-wrapper\">\n      <div className={`dropdown ${active ? \"is-active\" : \"\"}`}>\n        <div className=\"dropdown-trigger\">\n          <button\n            className=\"button\"\n            onClick={toggleDropdown}\n            aria-haspopup=\"true\"\n            aria-controls=\"dropdown-menu\"\n          >\n            <span>{title}</span>\n          </button>\n        </div>\n        <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n          <div className=\"dropdown-content\">\n            {Array.from(options).map((value, key) => {\n              return (\n                <button\n                  key={key}\n                  className=\"dropdown-item\"\n                  onClick={() => itemClick(value, type)}\n                >\n                  {value}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Fuse from \"fuse.js\";\n\nimport Head from \"../components/head\";\nimport Layout from \"../components/layout\";\nimport BookReviewEntry from \"../components/book-review/book-review-entry\";\nimport Dropdown from \"../components/book-review/dropdown\";\nimport Modal from \"../components/book-review/modal\";\n\nimport \"./styles/book-review.scss\";\n\nclass BookReview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      infoOpen: false,\n      openDropdown: \"\",\n      searchText: \"\",\n      fuzzySearchResults: [\"init\"],\n      genreFilters: [],\n      sortOrder: \"\",\n    };\n  }\n\n  render() {\n    const { data } = this.props;\n\n    // Subtract 1 to account for 'info' page in \"~/markdown/book-reviews/\"\n    //const totalBooks = data.allMarkdownRemark.totalCount - 1;\n    const typeOptions = [\"Fiction\", \"Non-fiction\"];\n    const genreOptions = [];\n    const sortOptions = [\"Recent\", \"Alphabetical\"];\n    // Learn about how this fuzzy search works at fuse.js\n    const fuzzySearchOptions = {\n      threshold: 0.3,\n      keys: [\"title\", \"author\", \"genre\"],\n      id: \"title\",\n    };\n\n    return (\n      <Layout>\n        <div className=\"book-review-wrapper\">\n          <Head title=\"Book Review\" />\n          {data.allMarkdownRemark.edges\n            .filter(({ node }) => node.frontmatter.type === \"info\")\n            .map(({ node, key }) => (\n              <Modal\n                key={key}\n                title={node.frontmatter.title}\n                author={node.frontmatter.author}\n                content={node.html}\n                isOpen={this.state.infoOpen}\n                closeModal={this._closeModal}\n              />\n            ))}\n          <section\n            className=\"section book-review-title-section\"\n            onClick={() => this._toggleDropdown(\"\")}\n          >\n            <h1 className=\"title is-1 has-text-centered\">Book Review</h1>\n          </section>\n\n          {/* <section className=\"section\" onClick={() => this._toggleDropdown(\"\")}>\n            <div className=\"container has-text-centered\">\n              <button\n                className=\"button info-button hvr-shrink\"\n                onClick={() => this._openModal()}\n              >\n                A Quick Word\n              </button>\n            </div>\n          </section> */}\n\n          <section className=\"section\">\n            <div className=\"container has-text-centered\">\n              <span className=\"filter-label\">Filters: </span>\n              {this.state.genreFilters.join(\", \")}\n            </div>\n          </section>\n\n          <section className=\"section\">\n            <div className=\"container level-holder\">\n              <nav className=\"level\">\n                <div className=\"level-left\">\n                  {/* <div className=\"level-item\">\n                    <span>\n                      <b>\n                        {this.state.fuzzySearchResults.includes(\"init\")\n                          ? totalBooks\n                          : this.state.fuzzySearchResults.length}\n                      </b>{\" \"}\n                      books\n                    </span>\n                  </div> */}\n                  <div className=\"level-item\">\n                    <input\n                      ref=\"txtSearch\"\n                      className=\"search-text input\"\n                      type=\"text\"\n                      placeholder=\"Find a book\"\n                      onChange={this._updateSearchText}\n                      onKeyPress={this._searchKeyPress}\n                    />\n                  </div>\n                  <div className=\"level-item book-search\">\n                    <button\n                      ref={input => (this.searchButton = input)}\n                      className=\"button hvr-shrink\"\n                      onClick={() =>\n                        this._fuzzySearch(\n                          data.allMarkdownRemark.edges\n                            .filter(\n                              ({ node }) => node.frontmatter.type === \"entry\"\n                            )\n                            .map(({ node }) => ({\n                              title: node.frontmatter.title,\n                              author: node.frontmatter.author,\n                              genre: node.frontmatter.tags,\n                            })),\n                          fuzzySearchOptions\n                        )\n                      }\n                    >\n                      Search\n                    </button>\n                  </div>\n                  <div className=\"level-item book-search\">\n                    <button\n                      className=\"button hvr-shrink\"\n                      onClick={this._clearSearch}\n                    >\n                      Clear Search\n                    </button>\n                  </div>\n                </div>\n                <div className=\"level-right\">\n                  <div className=\"level-item\">\n                    <Dropdown\n                      title={\"Type\"}\n                      options={typeOptions}\n                      active={this.state.openDropdown === \"type\"}\n                      type=\"filter\"\n                      toggleDropdown={() => this._toggleDropdown(\"type\")}\n                      itemClick={this._dropdownItemClick}\n                    />\n                  </div>\n                  <div className=\"level-item\">\n                    <Dropdown\n                      title={\"Genre\"}\n                      options={\n                        new Set(\n                          data.allMarkdownRemark.edges\n                            .filter(\n                              ({ node }) => node.frontmatter.type === \"entry\"\n                            )\n                            .flatMap(({ node }) => {\n                              node.frontmatter.tags.forEach(tag => {\n                                if (\n                                  tag !== \"Fiction\" &&\n                                  tag !== \"Non-fiction\"\n                                ) {\n                                  genreOptions.push(tag);\n                                }\n                              });\n                              return genreOptions;\n                            })\n                        )\n                      }\n                      active={this.state.openDropdown === \"genre\"}\n                      type=\"filter\"\n                      toggleDropdown={() => this._toggleDropdown(\"genre\")}\n                      itemClick={this._dropdownItemClick}\n                    />\n                  </div>\n                  <div className=\"level-item clear-filters\">\n                    <button\n                      className=\"button hvr-shrink\"\n                      onClick={this._clearFilters}\n                    >\n                      Clear Filters\n                    </button>\n                  </div>\n                  <div className=\"level-item\">\n                    <Dropdown\n                      title={\"Sort\"}\n                      options={sortOptions}\n                      active={this.state.openDropdown === \"sort\"}\n                      type=\"sort\"\n                      toggleDropdown={() => this._toggleDropdown(\"sort\")}\n                      itemClick={this._dropdownItemClick}\n                    />\n                  </div>\n                </div>\n              </nav>\n            </div>\n          </section>\n\n          <section className=\"section\" onClick={() => this._toggleDropdown(\"\")}>\n            <div className=\"hero\">\n              <div className=\"hero-body entries\">\n                {data.allMarkdownRemark.edges\n                  // omit the \"info\" markdown post\n                  .filter(\n                    ({ node }) =>\n                      node.frontmatter.type === \"entry\" &&\n                      (this.state.fuzzySearchResults.includes(\"init\") ||\n                        this.state.fuzzySearchResults.includes(\n                          node.frontmatter.title\n                        ))\n                  )\n                  // filter by genre\n                  .filter(\n                    ({ node }) =>\n                      node.frontmatter.tags.some(element =>\n                        this.state.genreFilters.includes(element)\n                      ) || this.state.genreFilters.length === 0\n                  )\n                  .sort((a, b) => {\n                    if (this.state.sortOrder === \"Alphabetical\") {\n                      return a.node.frontmatter.title < b.node.frontmatter.title\n                        ? -1\n                        : 1;\n                    } else {\n                      return a.node.frontmatter.date < b.node.frontmatter.date\n                        ? -1\n                        : 1;\n                    }\n                  })\n                  .map(({ node, key }) => (\n                    <BookReviewEntry\n                      key={key}\n                      author={node.frontmatter.author}\n                      content={node.html}\n                      coverImage={node.frontmatter.coverImage}\n                      excerpt={node.excerpt}\n                      tags={node.frontmatter.tags}\n                      title={node.frontmatter.title}\n                    />\n                  ))}\n              </div>\n            </div>\n          </section>\n        </div>\n      </Layout>\n    );\n  }\n\n  _searchKeyPress = evt => {\n    if (evt.key === \"Enter\") {\n      this.searchButton.click();\n      this.setState({\n        genreFilters: [],\n      });\n    }\n  };\n\n  _updateSearchText = evt => {\n    this.setState({\n      searchText: evt.target.value,\n    });\n  };\n\n  _fuzzySearch = (books, options) => {\n    const fuse = new Fuse(books, options);\n    const results = this.state.searchText\n      ? fuse.search(this.state.searchText)\n      : [\"init\"];\n\n    this.setState({\n      fuzzySearchResults: results,\n    });\n  };\n\n  _openModal = () => {\n    this.setState({\n      infoOpen: true,\n    });\n  };\n\n  _closeModal = () => {\n    this.setState({\n      infoOpen: false,\n    });\n  };\n\n  _toggleDropdown = dropdownName => {\n    this.setState({\n      openDropdown:\n        this.state.openDropdown !== dropdownName ? dropdownName : \"\",\n    });\n  };\n\n  _dropdownItemClick = (item, actionType) => {\n    this._closeDropdowns();\n\n    if (actionType === \"filter\") {\n      this.setState(state => {\n        const genreFilters = state.genreFilters.includes(item)\n          ? state.genreFilters\n          : state.genreFilters.concat(item);\n        return {\n          genreFilters,\n        };\n      });\n    } else {\n      this.setState({\n        sortOrder: item,\n      });\n    }\n  };\n\n  _closeDropdowns = () => {\n    this.setState({\n      openDropdown: \"\",\n    });\n  };\n\n  _clearFilters = () => {\n    this.setState({\n      genreFilters: [],\n    });\n  };\n\n  _clearSearch = () => {\n    this.refs.txtSearch.value = \"\";\n    this.setState({\n      fuzzySearchResults: [\"init\"],\n    });\n  };\n}\n\nexport default props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allMarkdownRemark(\n          sort: { fields: [frontmatter___date], order: DESC }\n          filter: { frontmatter: { class: { eq: \"book-review\" } } }\n        ) {\n          totalCount\n          edges {\n            node {\n              html\n              frontmatter {\n                author\n                coverImage\n                date(formatString: \"DD MMMM, YYYY\")\n                tags\n                title\n                type\n              }\n              excerpt(pruneLength: 350)\n            }\n          }\n        }\n      }\n    `}\n    render={data => <BookReview data={data} {...props} />}\n  />\n);\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst Head = ({ title }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return <Helmet title={`${title} | ${data.site.siteMetadata.title}`} />;\n};\n\nexport default Head;\n"],"sourceRoot":""}