{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/head.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_head__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","Blog","_ref","data","a","createElement","className","title","allMarkdownRemark","edges","map","_ref2","node","key","id","to","fields","slug","frontmatter","date","timeToRead","excerpt","Head","_public_static_d_1019946411_json__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","site","siteMetadata"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAsCaI,GAtCbJ,EAAA,KAAAA,EAAA,KAsCkB,cAyBHW,UAtDF,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACd,OACEP,EAAAQ,EAAAC,cAACL,EAAA,EAAD,KACEJ,EAAAQ,EAAAC,cAAA,OAAKC,UAAU,gBACbV,EAAAQ,EAAAC,cAACN,EAAA,EAAD,CAAMQ,MAAM,SACZX,EAAAQ,EAAAC,cAAA,WAASC,UAAU,WACjBV,EAAAQ,EAAAC,cAAA,MAAIC,UAAU,gCAAd,SAEFV,EAAAQ,EAAAC,cAAA,WAASC,UAAU,WACjBV,EAAAQ,EAAAC,cAAA,WAASC,UAAU,QAChBH,EAAKK,kBAAkBC,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAChChB,EAAAQ,EAAAC,cAAA,WAASQ,IAAKD,EAAKE,GAAIR,UAAU,aAC/BV,EAAAQ,EAAAC,cAAA,UACET,EAAAQ,EAAAC,cAACP,EAAA,EAAD,CAAMiB,GAAIH,EAAKI,OAAOC,MAAOL,EAAKM,YAAYX,OAAc,IAC5DX,EAAAQ,EAAAC,cAAA,iBAASO,EAAKM,YAAYC,OAE5BvB,EAAAQ,EAAAC,cAAA,QAAMC,UAAU,aAAhB,GACMM,EAAKQ,WADX,gBAGAxB,EAAAQ,EAAAC,cAAA,SAAIO,EAAKS,kGCVVC,IAdF,SAAApB,GAAe,IAAZK,EAAYL,EAAZK,MACRJ,EAAOoB,EAAApB,KAUb,OAAOqB,EAAApB,EAAAC,cAACoB,EAAArB,EAAD,CAAQG,MAAUA,EAAL,MAAgBJ,EAAKuB,KAAKC,aAAapB","file":"component---src-pages-blog-js-3f7c21e480b4044c991d.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Head from \"../components/head\";\nimport Layout from \"../components/layout\";\n\nimport \"../styles.scss\";\nimport \"./styles/blog.scss\";\n\nconst Blog = ({ data }) => {\n  return (\n    <Layout>\n      <div className=\"blog-wrapper\">\n        <Head title=\"Blog\" />\n        <section className=\"section\">\n          <h1 className=\"title is-1 has-text-centered\">Blog</h1>\n        </section>\n        <section className=\"section\">\n          <section className=\"hero\">\n            {data.allMarkdownRemark.edges.map(({ node }) => (\n              <section key={node.id} className=\"hero-body\">\n                <h3>\n                  <Link to={node.fields.slug}>{node.frontmatter.title}</Link>{\" \"}\n                  <span>â€” {node.frontmatter.date}</span>\n                </h3>\n                <span className=\"read-time\">\n                  {`${node.timeToRead}`} minute read\n                </span>\n                <p>{node.excerpt}</p>\n              </section>\n            ))}\n          </section>\n        </section>\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { class: { eq: \"blog-post\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n\nexport default Blog;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst Head = ({ title }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return <Helmet title={`${title} | ${data.site.siteMetadata.title}`} />;\n};\n\nexport default Head;\n"],"sourceRoot":""}